class Solution {
public:
    vector<vector<string>> groupAnagrams(vector<string>& strs)
    {
        vector<vector<string>> res;
        unordered_map<string,decltype(res.size())> hashmap;
        sort(strs.begin(),strs.end());
        for(auto str:strs)
        {
            string key(128,'0');
            for(auto ch:str)//key can be generated by sorting each str. sorted str itself is the key
            {
                key[ch]+=1;
            }
            if(hashmap.find(key)!=hashmap.end())//find it
            {
                res[hashmap[key]].push_back(str);
            }
            else
            {
                res.push_back(vector<string>(1,str));
                hashmap[key]=res.size()-1;
                
            }
        }
        return res;
    }
};